// <auto-generated />
using System;
using Cocapec.ContratoFuturo.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cocapec.ContratoFuturo.Infra.Data.Migrations
{
    //[DbContext(typeof(ContratoFuturoContext))]
    [Migration("20201206131124_solicitacaoFiadorDerivativoUsuarioId")]
    partial class solicitacaoFiadorDerivativoUsuarioId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BaixadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CertificacaoId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtLimite")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtPagto")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeUnidadeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<string>("ParceiroSegmentacao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ParceiroSegmentacaoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecoMinimoAutorizado")
                        .HasColumnType("float");

                    b.Property<double>("SacasAutorizadas")
                        .HasColumnType("float");

                    b.Property<int>("SafraComercialFuturoId")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoAutorizacao")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoProcessamentoCafeId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificacaoId");

                    b.HasIndex("ModalidadeId");

                    b.HasIndex("SafraComercialFuturoId");

                    b.HasIndex("SolicitacaoId");

                    b.HasIndex("TipoProcessamentoCafeId");

                    b.ToTable("AutorizacaoVenda");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVendaFiador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("AutorizacaoId")
                        .HasColumnType("int");

                    b.Property<int>("ConjugeId")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int?>("FiadorId")
                        .HasColumnType("int");

                    b.Property<string>("NomeConjuge")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeFiador")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorizacaoId");

                    b.ToTable("AutorizacaoVendaFiador");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVendaInterveniente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("AutorizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int>("IntervenienteId")
                        .HasColumnType("int");

                    b.Property<string>("NomeInterveniente")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorizacaoId");

                    b.ToTable("AutorizacaoVendaInterveniente");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.BloqueioVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Bloquear")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoBloqueio")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeParceiroNegocio")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ParceiroNegocioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoBloqueio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BloqueioVenda");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.CertificacaoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CertificacaoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ClsTipoProcessamentoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescProcessCafe")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescProcessCafeAbreviacao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoProcessamentoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<string>("ConcluidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContratoExportacaoReferencia")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<double>("CotacaoMoeda")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentoBolsaReferencia")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DocumentoReferencia")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("FinalidadeDerivativoId")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadeDerivativoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeBanco")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("RefMesId")
                        .HasColumnType("int");

                    b.Property<int>("ReferenciaDerCompl")
                        .HasColumnType("int");

                    b.Property<int>("RegistroCETIP")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoContrato")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoVinculoTermo")
                        .HasColumnType("int");

                    b.Property<double>("TaxasContratuais")
                        .HasColumnType("float");

                    b.Property<int>("TipoDerivativo")
                        .HasColumnType("int");

                    b.Property<int>("TipoMoedaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOperacaoDerivativo")
                        .HasColumnType("int");

                    b.Property<double>("ValorContrato")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<string>("VinculadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FinalidadeDerivativoId");

                    b.HasIndex("ModalidadeDerivativoId");

                    b.HasIndex("TipoMoedaId");

                    b.ToTable("ContratoCafeDerivativo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoDerivativoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DTOperacao")
                        .HasColumnType("datetime");

                    b.Property<string>("DescOperacaoESDerivativoCafe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoCETIPRefer")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OperacaoESDerivativoCafeId")
                        .HasColumnType("int");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("RegistroCETIP")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoMovimento")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ValorAjusteOperacao")
                        .HasColumnType("float");

                    b.Property<double>("ValorAjusteUnitario")
                        .HasColumnType("float");

                    b.Property<double>("ValorOperacao")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoDerivativoId");

                    b.HasIndex("OperacaoESDerivativoCafeId");

                    b.ToTable("ContratoCafeDerivativoMov");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoPAD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoDerivativoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPosicaoId")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ModalidadePosicaoPAD")
                        .HasColumnType("int");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<double>("ValorAMPosicaoBanco")
                        .HasColumnType("float");

                    b.Property<double>("ValorAMPosicaoCliente")
                        .HasColumnType("float");

                    b.Property<double>("ValorAjustePosicao")
                        .HasColumnType("float");

                    b.Property<double>("ValorAjusteUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoDerivativoId");

                    b.ToTable("ContratoCafeDerivativoPAD");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoPADHS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoDerivativoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPosicaoId")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ModalidadePosicao")
                        .HasColumnType("int");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<int>("PADId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStampHistoricoId")
                        .HasColumnType("datetime");

                    b.Property<double>("ValorAMPosicaoBanco")
                        .HasColumnType("float");

                    b.Property<double>("ValorAMPosicaoCliente")
                        .HasColumnType("float");

                    b.Property<double>("ValorAjustePosicao")
                        .HasColumnType("float");

                    b.Property<double>("ValorAjusteUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PADId");

                    b.ToTable("ContratoCafeDerivativoPADHS");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoSaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoDerivativoId")
                        .HasColumnType("int");

                    b.Property<double>("EntradaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<int>("MesRef")
                        .HasColumnType("int");

                    b.Property<double>("SaidaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<double>("SaldoQuantidadeSacas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoDerivativoId");

                    b.ToTable("ContratoDerivativoSaldo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoTermo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoCafeDerivativoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtOperacao")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantSacas")
                        .HasColumnType("float");

                    b.Property<int>("TermoContratoCafeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoCafeDerivativoId");

                    b.HasIndex("TermoContratoCafeId");

                    b.ToTable("ContratoCafeDerivativoTermo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("ConcluidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("ContratoAssinado")
                        .HasColumnType("bit");

                    b.Property<string>("DocumentoRefer")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtPagamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ModalidadeCafeEPId")
                        .HasColumnType("int");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeUnidadeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<string>("ParceiroSegmentacao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ParceiroSegmentacaoId")
                        .HasColumnType("int");

                    b.Property<string>("PedidoFaturado")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<string>("RequerModalidadeCafeEP")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("SituacaoContrato")
                        .HasColumnType("int");

                    b.Property<int>("TermoId")
                        .HasColumnType("int");

                    b.Property<string>("TituloCTPagar")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TituloCTReceber")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AutorizacaoId");

                    b.HasIndex("ModalidadeCafeEPId");

                    b.HasIndex("TermoId");

                    b.ToTable("ContratoCafeEntrada");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaAjuste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoEntradaId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoAjuste")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtAjuste")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissaoAjuste")
                        .HasColumnType("datetime");

                    b.Property<string>("EfetuadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<double>("QuantSacasAjuste")
                        .HasColumnType("float");

                    b.Property<int>("SituacaoAjuste")
                        .HasColumnType("int");

                    b.Property<double>("ValorAjuste")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoEntradaId");

                    b.ToTable("ContratoCafeEntradaAjuste");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoCafeEntradaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtOperacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OpEntSaidaId")
                        .HasColumnType("int");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<string>("TituloCTReceber")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoCafeEntradaId");

                    b.HasIndex("OpEntSaidaId");

                    b.ToTable("ContratoCafeEntradaMov");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaSaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoCafeEntradaId")
                        .HasColumnType("int");

                    b.Property<double>("EntradaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<int>("MesReferenciaId")
                        .HasColumnType("int");

                    b.Property<double>("SaidaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<double>("SaldoQuantidadeSacas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoCafeEntradaId");

                    b.ToTable("ContratoCafeEntradaSaldo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertificacaoId")
                        .HasColumnType("int");

                    b.Property<string>("ConcluidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<double>("CotacaoMoeda")
                        .HasColumnType("float");

                    b.Property<string>("DocumentoRefer")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FinalidadeContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("ModalidadeCafeEpId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCorretor")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeUnidadeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<string>("ParceiroSegmentacao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ParceiroSegmentacaoId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<string>("RequerCertificacaoCafe")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("RequerFinalidadeContrato")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("RequerModalidadeCafeEP")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("SafraComercialFuturoId")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoContrato")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoVinculoTermo")
                        .HasColumnType("int");

                    b.Property<int>("TipoMoedaId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<string>("VinculadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CertificacaoId");

                    b.HasIndex("FinalidadeContratoId");

                    b.HasIndex("ModalidadeCafeEpId");

                    b.HasIndex("SafraComercialFuturoId");

                    b.HasIndex("TipoMoedaId");

                    b.ToTable("ContratoCafeSaida");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaAjuste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoSaidaId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoAjuste")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtAjuste")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissaoAjuste")
                        .HasColumnType("datetime");

                    b.Property<string>("EfetuadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<double>("QuantSacasAjuste")
                        .HasColumnType("float");

                    b.Property<int>("SituacaoAjuste")
                        .HasColumnType("int");

                    b.Property<double>("ValorAjuste")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoSaidaId");

                    b.ToTable("ContratoCafeSaidaAjuste");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoSaidaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DTOperacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OpESContratoId")
                        .HasColumnType("int");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<string>("TituloCTReceber")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoSaidaId");

                    b.HasIndex("OpESContratoId");

                    b.ToTable("ContratoCafeSaidaMov");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaSaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoSaidaId")
                        .HasColumnType("int");

                    b.Property<double>("EntradaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<int>("MesReferenciaId")
                        .HasColumnType("int");

                    b.Property<double>("SaidaQuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<double>("SaldoQuantidadeSacas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContratoSaidaId");

                    b.ToTable("ContratoCafeSaidaSaldo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaTermo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoCafeSaidaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtOperacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeSacas")
                        .HasColumnType("float");

                    b.Property<int>("TermoContratoCafeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoCafeSaidaId");

                    b.HasIndex("TermoContratoCafeId");

                    b.ToTable("ContratoCafeSaidaTermo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.FinalidadeContratoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("TipoFinalidadeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoFinalidadeId");

                    b.ToTable("FinalidadeContratoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.FinalidadeDerivativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoFinalidadeDerivativo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ResumoDescricaoFinalidadeDerivativo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FinalidadeDerivativo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ModalidadeCafeEP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CafeCertificacao")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("CertificacaoCafeId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("TipoEquivalencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificacaoCafeId");

                    b.ToTable("ModalidadeCafeEP");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ModalidadeContratoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DRTRequerModalidadeCafeEP")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("DRTRequerProtecaoValor")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("DRTRequerValorSacaFlex")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int>("FinalidadeContratoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("TipoModalidadeContratoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinalidadeContratoId");

                    b.HasIndex("TipoModalidadeContratoId");

                    b.ToTable("ModalidadeContratoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ModalidadeDerivativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoModalidadeDerivativo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModalidadeDerivativo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.OperacaoESContratoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OperacaoES")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OperacaoEntregaCafe")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.ToTable("OperacaoESContratoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.OperacaoESDerivativoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescricaoResumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("OperacaoES")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OperacaoLiquidacaoTotal")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.ToTable("OperacaoESDerivativoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtLimite")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtPagamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int>("ModalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Safra")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SafraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModalidadeId");

                    b.ToTable("SafraComercialFuturo");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SafraComercialVigencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtVigencia")
                        .HasColumnType("datetime");

                    b.Property<double>("LimiteCoop")
                        .HasColumnType("float");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("SafraComercialFuturoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SafraComercialFuturoId");

                    b.ToTable("SafraComercialVigencia");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agronomo")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoBloqueio")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DescricaoSolicitacao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<double>("LimiteSacas")
                        .HasColumnType("float");

                    b.Property<bool>("NaoProprietario")
                        .HasColumnType("bit");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeUnidadeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<string>("ParceiroSegmentacao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ParceiroSegmentacaoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecoMinimoAutorizado")
                        .HasColumnType("float");

                    b.Property<string>("PrevisaoSafra")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PrevisaoSafraAgronomo")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<double>("SacasAutorizacoesPendentes")
                        .HasColumnType("float");

                    b.Property<double>("SacasContratoBaixados")
                        .HasColumnType("float");

                    b.Property<int>("SafraComercialFuturoId")
                        .HasColumnType("int");

                    b.Property<string>("SaldoDespersonalizado")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("SaldoInsuficiente")
                        .HasColumnType("bit");

                    b.Property<int>("SituacaoSolicitacao")
                        .HasColumnType("int");

                    b.Property<int>("StatusSolicitacao")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneAgronomo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TelefoneCooperado")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<double>("VolumeSolicitado")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SafraComercialFuturoId");

                    b.ToTable("SolicitacaoVenda");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaFiador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ConjugeId")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int?>("FiadorId")
                        .HasColumnType("int");

                    b.Property<string>("NomeConjuge")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeFiador")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoVendaFiador");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaInterveniente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<int>("IntervenienteId")
                        .HasColumnType("int");

                    b.Property<string>("NomeInterveniente")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoVendaInterveniente");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Devolutiva")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsComite")
                        .HasColumnType("bit");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoVendaMov");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CertificacaoCafeId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtEncerramento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtLimiteEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtLimiteSaida")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ExcercicioRefer")
                        .HasColumnType("int");

                    b.Property<int>("FinalidadeContratoCafeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModalidadeCafeEPId")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadeContratoCafeId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OrigemLancamento")
                        .HasColumnType("int");

                    b.Property<string>("RequerCertificacaoCafe")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("RequerModalidadeCafeEP")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("RequerProtecaoValor")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("RequerValorSacaFlex")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("SafraComercialFuturoId")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoTermo")
                        .HasColumnType("int");

                    b.Property<int>("TipoProcessamentoCafeId")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CertificacaoCafeId");

                    b.HasIndex("FinalidadeContratoCafeId");

                    b.HasIndex("ModalidadeCafeEPId");

                    b.HasIndex("ModalidadeContratoCafeId");

                    b.HasIndex("SafraComercialFuturoId");

                    b.HasIndex("TipoProcessamentoCafeId");

                    b.ToTable("TermoContratoCafe");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TermoContratoHst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RequerProtecao")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("TermoContratoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TermoContratoId");

                    b.ToTable("TermoContratoHst");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TipoFinalidadeContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodRefTipoFinalidade")
                        .HasColumnType("int");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoFinalidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoFinalidadeContrato");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TipoModalidadeContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoModalidadeContrato");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TipoMoeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoIntegracao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescricaoMoeda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtUltimaManutencao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RotuloMoeda")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TipoMoeda");
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVenda", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.CertificacaoCafe", "Certificacao")
                        .WithMany("Autorizacoes")
                        .HasForeignKey("CertificacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeContratoCafe", "Modalidade")
                        .WithMany("Autorizacoes")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", "Safra")
                        .WithMany("Autorizacoes")
                        .HasForeignKey("SafraComercialFuturoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", "Solicitacao")
                        .WithMany("Autorizacoes")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ClsTipoProcessamentoCafe", "TipoProcessamentoCafe")
                        .WithMany("Autorizacoes")
                        .HasForeignKey("TipoProcessamentoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVendaFiador", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVenda", "Autorizacao")
                        .WithMany("Fiadores")
                        .HasForeignKey("AutorizacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVendaInterveniente", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVenda", "Autorizacao")
                        .WithMany("Intervenientes")
                        .HasForeignKey("AutorizacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.FinalidadeDerivativo", "FinalidadeDerivativo")
                        .WithMany("Derivativos")
                        .HasForeignKey("FinalidadeDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeDerivativo", "ModalidadeDerivativo")
                        .WithMany("Derivativos")
                        .HasForeignKey("ModalidadeDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TipoMoeda", "TipoMoeda")
                        .WithMany("ContratosCafeDerivativo")
                        .HasForeignKey("TipoMoedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoMov", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", "Derivativo")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContratoDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.OperacaoESDerivativoCafe", "OperacaoESDerivativoCafe")
                        .WithMany("Derivativos")
                        .HasForeignKey("OperacaoESDerivativoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoPAD", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", "ContratoCafeDerivativo")
                        .WithMany("Posicoes")
                        .HasForeignKey("ContratoDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoPADHS", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoPAD", "ContratoCafeDerivativoPAD")
                        .WithMany("Historicos")
                        .HasForeignKey("PADId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoSaldo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", "Derivativo")
                        .WithMany("Saldos")
                        .HasForeignKey("ContratoDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativoTermo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeDerivativo", "Derivativo")
                        .WithMany("Termos")
                        .HasForeignKey("ContratoCafeDerivativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", "Termo")
                        .WithMany("Derivativos")
                        .HasForeignKey("TermoContratoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntrada", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.AutorizacaoVenda", "Autorizacao")
                        .WithMany("ContratosEntrada")
                        .HasForeignKey("AutorizacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeCafeEP", "ModalidadeCafeEP")
                        .WithMany("ContratosEntrada")
                        .HasForeignKey("ModalidadeCafeEPId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", "TermoContratoCafe")
                        .WithMany("ContratosEntrada")
                        .HasForeignKey("TermoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaAjuste", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntrada", "ContratoEntrada")
                        .WithMany("Ajustes")
                        .HasForeignKey("ContratoEntradaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaMov", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntrada", "ContratoCafeEntrada")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContratoCafeEntradaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.OperacaoESContratoCafe", "OpEntSaida")
                        .WithMany("ContratosEntradaMov")
                        .HasForeignKey("OpEntSaidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntradaSaldo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeEntrada", "ContratoEntrada")
                        .WithMany("Saldos")
                        .HasForeignKey("ContratoCafeEntradaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.CertificacaoCafe", "CertificacaoCafe")
                        .WithMany("ContratoCafeSaida")
                        .HasForeignKey("CertificacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.FinalidadeContratoCafe", "FinalidadeContrato")
                        .WithMany("ContratosSaida")
                        .HasForeignKey("FinalidadeContratoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeCafeEP", "ModalidadeCafeEp")
                        .WithMany("ContratosSaida")
                        .HasForeignKey("ModalidadeCafeEpId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", "SafraComercialFuturo")
                        .WithMany("ContratosSaida")
                        .HasForeignKey("SafraComercialFuturoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TipoMoeda", "TipoMoeda")
                        .WithMany("ContratosSaida")
                        .HasForeignKey("TipoMoedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaAjuste", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", "ContratoSaida")
                        .WithMany("Ajustes")
                        .HasForeignKey("ContratoSaidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaMov", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", "ContratoSaida")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContratoSaidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.OperacaoESContratoCafe", "OpEntSaida")
                        .WithMany("ContratosSaidaMov")
                        .HasForeignKey("OpESContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaSaldo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", "ContratoSaida")
                        .WithMany("Saldos")
                        .HasForeignKey("ContratoSaidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaidaTermo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ContratoCafeSaida", "ContratoCafeSaida")
                        .WithMany("Termos")
                        .HasForeignKey("ContratoCafeSaidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", "TermoContratoCafe")
                        .WithMany("ContratosSaida")
                        .HasForeignKey("TermoContratoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.FinalidadeContratoCafe", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TipoFinalidadeContrato", "TipoFinalidade")
                        .WithMany("Finalidades")
                        .HasForeignKey("TipoFinalidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ModalidadeCafeEP", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.CertificacaoCafe", "Certificacao")
                        .WithMany("Modalidades")
                        .HasForeignKey("CertificacaoCafeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.ModalidadeContratoCafe", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.FinalidadeContratoCafe", "FinalidadeContratoCafe")
                        .WithMany("Modalidades")
                        .HasForeignKey("FinalidadeContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TipoModalidadeContrato", "TipoModalidadeContrato")
                        .WithMany("Modalidades")
                        .HasForeignKey("TipoModalidadeContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeContratoCafe", "Modalidade")
                        .WithMany("Safras")
                        .HasForeignKey("ModalidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SafraComercialVigencia", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", "Safra")
                        .WithMany("Vigencias")
                        .HasForeignKey("SafraComercialFuturoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", "Safra")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("SafraComercialFuturoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaFiador", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", "Solicitacao")
                        .WithMany("Fiadores")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaInterveniente", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", "Solicitacao")
                        .WithMany("Intervenientes")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVendaMov", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SolicitacaoVenda", "Solicitacao")
                        .WithMany("Movimentos")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.CertificacaoCafe", "CertificacaoCafe")
                        .WithMany("Termos")
                        .HasForeignKey("CertificacaoCafeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.FinalidadeContratoCafe", "FinalidadeContratoCafe")
                        .WithMany()
                        .HasForeignKey("FinalidadeContratoCafeId")
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeCafeEP", "ModalidadeCafeEP")
                        .WithMany("Termos")
                        .HasForeignKey("ModalidadeCafeEPId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ModalidadeContratoCafe", "ModalidadeContratoCafe")
                        .WithMany("Termos")
                        .HasForeignKey("ModalidadeContratoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.SafraComercialFuturo", "SafraComercialFuturo")
                        .WithMany("Termos")
                        .HasForeignKey("SafraComercialFuturoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.ClsTipoProcessamentoCafe", "TipoProcessamentoCafe")
                        .WithMany("Termos")
                        .HasForeignKey("TipoProcessamentoCafeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cocapec.ContratoFuturo.Domain.Models.TermoContratoHst", b =>
                {
                    b.HasOne("Cocapec.ContratoFuturo.Domain.Models.TermoContratoCafe", "TermoContratoCafe")
                        .WithMany("Historicos")
                        .HasForeignKey("TermoContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
